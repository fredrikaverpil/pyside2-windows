# syntax examples: https://www.appveyor.com/docs/appveyor-yml/

# version format
version: 1.0.{build}


# branches to build
branches:
  only:
    - master


environment:
  # environment docs: https://www.appveyor.com/docs/build-environment/

  # global variables
  global:
    CMAKE: "C:\\Program Files (x86)\\cmake\\bin\\cmake.exe"

  matrix:

    # Qt 5.6, Python 3.6 32-bit, MSVC2015 (v14)
    - PYTHON: "C:\\Python36"
      QT: "C:\\Qt\\5.6\\msvc2015"
      PYSIDE_BRANCH: "5.6"
      OPENSSL: "C:\\OpenSSL-Win32\\bin"
      VS: "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat"
      ARCH: x86
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: x86
      fast_finish: true

    # Qt 5.6, Python 3.6 64-bit, MSVC2015 (v14)
    - PYTHON: "C:\\Python36-x64"
      QT: "C:\\Qt\\5.6\\msvc2015_64"
      PYSIDE_BRANCH: "5.6"
      OPENSSL: "C:\\OpenSSL-Win64\\bin"
      VS: "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat"
      ARCH: amd64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: x64
      fast_finish: true

    # Qt 5.11, Python 3.6 32-bit, MSVC2015 (v14)
    - PYTHON: "C:\\Python36"
      QT: "C:\\Qt\\5.9\\msvc2015"
      PYSIDE_BRANCH: "5.11"
      LIBCLANG_ZIP_FOLDER: http://download.qt.io/development_releases/prebuilt/libclang
      LIBCLANG_ZIP: libclang-release_50-windows-vs2015_32-clazy.7z
      OPENSSL: "C:\\OpenSSL-Win32\\bin"
      VS: "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat"
      ARCH: x86
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: x86
      fast_finish: true

    # Qt 5.11, Python 3.6 64-bit, MSVC2015 (v14)
    - PYTHON: "C:\\Python36-x64"
      QT: "C:\\Qt\\5.9\\msvc2015_64"
      PYSIDE_BRANCH: "5.11"
      LIBCLANG_ZIP_FOLDER: http://download.qt.io/development_releases/prebuilt/libclang
      LIBCLANG_ZIP: libclang-release_50-windows-vs2015_64-clazy.7z
      OPENSSL: "C:\\OpenSSL-Win64\\bin"
      VS: "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat"
      ARCH: amd64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: x64
      fast_finish: true


init:
  - pwd
  - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - if defined VS call "%VS%" %ARCH%


install:
  - python -m pip install --upgrade pip
  - pip install --user setuptools wheel

  # pip-installing lxml doesn't provide the libXml2/libxml2 libraries, only the binaries
  # - pip install lxml

  # libclang required for PySide2 5.9 branch
  - if [%PYSIDE_BRANCH%]==[5.9] (curl -L -fsS -o %LIBCLANG_ZIP% %LIBCLANG_ZIP_FOLDER%/%LIBCLANG_ZIP%)
  - if [%PYSIDE_BRANCH%]==[5.9] (7z x %LIBCLANG_ZIP%)
  - if [%PYSIDE_BRANCH%]==[5.9] (SET CLANG_INSTALL_DIR=%CD%\libclang)

  - git clone --recursive --branch %PYSIDE_BRANCH% https://code.qt.io/pyside/pyside-setup.git C:\pyside-setup


before_build:
  # Show which commit is being used
  - git --git-dir C:\pyside-setup\.git log -n 1
  - python --version
  - cmake --version
  - git --version
  - clang --version
  - '%QT%\bin\qmake.exe --version'


build_script:
  - python C:\pyside-setup\setup.py bdist_wheel --ignore-git --standalone --no-examples --jom --qmake="%QT%\bin\qmake.exe" --openssl="%OPENSSL%" --cmake="%CMAKE%"


after_build:
  - xcopy C:\pyside-setup\dist\PySide2*.whl %CD%


before_test:
  - for %%i in (%CD%\*.whl) do pip install %%i


test_script:
  # very simple test, not actually sufficient to test the standalone wheel
  - python -c "import PySide2"


artifacts:
  - path: '*.whl'


deploy:
  release: $(APPVEYOR_REPO_TAG_NAME)
  tag: $(APPVEYOR_REPO_TAG_NAME)  # Prevent endlessly creating new releases/tags
  description: 'AppVeyor build $(APPVEYOR_BUILD_VERSION)'
  provider: GitHub
  auth_token:
    secure: b3mQF8mVGm4ZCnWap1OxJqnCC80dJJeCOlYblx56T2C87EhzZBGejoosw46xBZAI
  artifact: /.*\.whl/
  draft: false
  prerelease: false
  force_update: true
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
